"use strict";(self.webpackChunkivanignatiev=self.webpackChunkivanignatiev||[]).push([[518],{4369:t=>{t.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"learning-git","metadata":{"permalink":"/learning-git","source":"@site/blog/note0002-learning-git.md","title":"Note 2: Learning Git","description":"Git is the foundation of collaboration within any coding team today. It\u2019s a fundamental technical skill that can cause a daily pain if not mastered.","date":"2025-01-23T09:30:00.000Z","tags":[],"readingTime":0.69,"hasTruncateMarker":false,"authors":[{"name":"Ivan Ignatiev","socials":{"x":"https://x.com/ivan_ignatiev","github":"https://github.com/ivanignatiev","linkedin":"https://www.linkedin.com/in/ivan-ignatiev/"},"imageURL":"https://github.com/ivanignatiev.png","key":"ivanignatiev","page":null}],"frontMatter":{"slug":"learning-git","title":"Note 2: Learning Git","authors":"ivanignatiev","tags":[],"date":"2025-01-23T09:30"},"unlisted":false,"nextItem":{"title":"Note 1: Visual Communication Tools for Architecture","permalink":"/visual-communication-tools-for-architecture"}},"content":"Git is the foundation of collaboration within any coding team today. It\u2019s a fundamental technical skill that can cause a daily pain if not mastered.\\n\\n## Basics\\n\\n- Book: [O\'Reilly - Anna Skoulikari - Learning Git](https://learning.oreilly.com/library/view/learning-git/9781098133900/)\\n- Visual Tool: [Learn Git Branching](https://learngitbranching.js.org/)\\n- [Git Immersion](https://gitimmersion.com/index.html)\\n- [GitByBit](https://gitbybit.com/)\\n\\n## Advanced\\n\\nEverything which will help to apply this tool in the real world practice and establish a good style shared across all project contributors.\\n\\n- [ooloo.io github flow course](https://ooloo.io/project/github-flow/mindset)\\n- [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\\n- [Git flow](https://nvie.com/posts/a-successful-git-branching-model/)\\n- Best Practices for Git:\\n  - https://about.gitlab.com/topics/version-control/version-control-best-practices/\\n- Best Practices for GitHub:\\n  - https://docs.github.com/en/repositories/creating-and-managing-repositories/best-practices-for-repositories\\n  - https://dev.to/pwd9000/github-repository-best-practices-23ck\\n  - https://medium.com/datreeio/top-10-github-best-practices-for-developers-d6309a613227\\n- Best Practices for Azure Repos (Azure DevOps):\\n  - https://learn.microsoft.com/en-us/azure/devops/repos/git/git-branching-guidance?view=azure-devops\\n\\n## Transversal Resources\\n\\n- [Learn Git and GitHub roadmap](https://roadmap.sh/git-github)\\n- [Git recourses from awesome repository](https://github.com/sindresorhus/awesome?tab=readme-ov-file#development-environment)\\n- Free eBook: [Pro Git](https://git-scm.com/book/en/v2)\\n\\n## Tools\\n\\n- [GitHub Desktop](https://github.com/apps/desktop)\\n- [GitButler](https://gitbutler.com/)"},{"id":"visual-communication-tools-for-architecture","metadata":{"permalink":"/visual-communication-tools-for-architecture","source":"@site/blog/note0001-visual-communication-tools-for-architecture.md","title":"Note 1: Visual Communication Tools for Architecture","description":"This article focuses on visual tools to represent IT architectures and resources for those tools.","date":"2025-01-21T09:30:00.000Z","tags":[],"readingTime":1.03,"hasTruncateMarker":false,"authors":[{"name":"Ivan Ignatiev","socials":{"x":"https://x.com/ivan_ignatiev","github":"https://github.com/ivanignatiev","linkedin":"https://www.linkedin.com/in/ivan-ignatiev/"},"imageURL":"https://github.com/ivanignatiev.png","key":"ivanignatiev","page":null}],"frontMatter":{"slug":"visual-communication-tools-for-architecture","title":"Note 1: Visual Communication Tools for Architecture","authors":"ivanignatiev","tags":[],"date":"2025-01-21T09:30"},"unlisted":false,"prevItem":{"title":"Note 2: Learning Git","permalink":"/learning-git"}},"content":"This article focuses on visual tools to represent IT architectures and resources for those tools.\\n\\n## What I use\\n\\nTools for Ad-hoc communication, drafting, and wireframing:\\n\\n- https://excalidraw.com/\\n- https://www.figma.com/figjam/\\n- https://miro.com/\\n- https://xmind.app/ (MindMaps)\\n\\nTools to transform drafts to more presentable assets:\\n\\n- [draw.io](https://draw.io)\\n- [Microsoft Visio](https://www.microsoft.com/microsoft-365/visio/flowchart-software)\\n\\nTools for use in documentation (Diagrams as a Code):\\n\\n- [Mermaid Playground](https://www.mermaidchart.com/play)\\n\\n## What I use, As an Azure Consultant:\\n\\n- In Enterprise world many documentation is done with [Microsoft Visio](https://www.microsoft.com/microsoft-365/visio/flowchart-software)\\n- Azure Services Icons from [Azure-Design repository](https://github.com/David-Summers/Azure-Design)\\n- [Official Azure Icons from Microsoft](https://learn.microsoft.com/en-us/azure/architecture/icons/)  \\n- Visio files could be found in architectures from [Azure Architecture Center](https://learn.microsoft.com/en-us/azure/architecture/browse/)\\n\\n## Other\\n\\nTo make visual communication clear we need to decide on style and configure out tools:\\n\\n- Color scheme\\n- Rounding\\n- Fonts\\n\\nThat is why it is import to look around, analyze, and compare. When you look to graphic designer, photographer courses you you always find a section about \\"collecting inspirations\\", \\"observation and others work observation\\", \\"designer eye training\\".\\n\\nHere I like to maintain my collection for observability:\\n\\n- [Tools section in Awesome Software Architecture](https://github.com/simskij/awesome-software-architecture?tab=readme-ov-file#tools)\\n- [Principal Based Enterprise Architecture (PBEA) stencils](https://pbea.iankoenig.com/visio.php)\\n- [Archi - Archimate Tool](https://www.archimatetool.com/)\\n- [Eraser](https://www.eraser.io/)\\n- [PlantUML](https://plantuml.com/)\\n- [D2](https://d2lang.com/)\\n- [Ilograph](https://www.ilograph.com/)\\n- [C4 Model - Tooling](https://c4model.com/tooling)"}]}}')}}]);